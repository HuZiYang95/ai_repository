C51 COMPILER V9.59.0.0   MAIN                                                              08/29/2024 16:47:03 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\4_user\main.c OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\1_bsp;..\2_hal;
                    -..\3_app;..\4_user) DEBUG PRINT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          /**
   2           * @file main.c
   3           * @author your name (you@domain.com)
   4           * @brief
   5           * @version 0.1
   6           * @date 2024-01-04
   7           *
   8           * @copyright Copyright (c) 2024
   9           *
  10           */
  11          #include "user_include.h"
  12          
  13          
  14          void sys_init()
  15          {
  16   1          //上电延迟
  17   1          bsp_power_on_delay();
  18   1      
  19   1          // 关闭总中断
  20   1          GLOBAL_INT_DIS();
  21   1      
  22   1          // 初始化lvr，掉电记忆应用中，LVR设置必须大于2.1V
  23   1          bsp_lvr_init(LVR_2_44);
  24   1      
  25   1          // 使能相关时钟源，并初始化系统时钟；如果使用外振且起振失败，程序自动
             -切换内振并返回ERROR
  26   1          if (ERROR == bsp_sysclock_init(SYS_CLK_HIRC_16M));
  27   1      
  28   1          // 初始化gpio
  29   1          bsp_gpio_init();
  30   1      
  31   1          // 全片FLASH保护
  32   1          bsp_flash_protect(FLASH_PROTECT_FFFF);
  33   1      
  34   1          // 初始化wdt
  35   1          bsp_wdt_init(100);
  36   1      
  37   1          // 初始化1ms tick定时器
  38   1          systick_init();
  39   1      
  40   1          // 初始化触摸
  41   1          TouchKeyInit();
  42   1      
  43   1          // 初始化其他外设
  44   1          // bsp_timer0_init_us (TIMER_INT_PRIORITY_0, 125);  // 定时器0中断，125us
  45   1          // bsp_lvd_init(ENABLE, LVD_4_0);   // 低电压检测使能
  46   1          bsp_uart0_init(UART_BAUD_9600, UART0_RX_P20_TX_P21, ENABLE, ENABLE, UART_INT_PRIORITY_0);
  47   1      
  48   1          // 使能总中断
  49   1          GLOBAL_INT_EN();
  50   1      }
  51          
  52          
  53          void hal_app_init(void)
C51 COMPILER V9.59.0.0   MAIN                                                              08/29/2024 16:47:03 PAGE 2   

  54          {
  55   1          ;
  56   1      }
  57          
  58          
  59          static unsigned int SysTick2ms = 0;
  60          static unsigned int SysTick10ms = 0;
  61          static unsigned int SysTick100ms = 0;
  62          void main()
  63          {
  64   1          sys_init();
  65   1          hal_app_init();
  66   1      
  67   1          while (1)
  68   1          {
  69   2              if (TRUE == is_systick_expired(&SysTick2ms, 2))
  70   2              {
  71   3                  SysTick2ms = get_tick();
  72   3                  TouchKeyScan();
  73   3      #if TK_DEBUG_ENABLE
                          r1ms_tkFrame++;
                          if (r1ms_tkFrame >= 100)      //每隔100-150ms发送一次按键数据
                          {
                              r1ms_tkFrame = 0;
                              TK_FrameSender(tkBaseLine, tkSensorDataBuff, TkTotalNum);
                          }
              #endif
  81   3              }
  82   2              if (TRUE == is_systick_expired(&SysTick10ms, 10))
  83   2              {
  84   3                  WDT_CLR();
  85   3              }
  86   2              if (TRUE == is_systick_expired(&SysTick100ms, 100))
  87   2              {
  88   3      
  89   3              }
  90   2          }
  91   1      }
  92          
  93          
  94          // - - - - - - - - - - - - - - - - - - AIP8F3264中断服务函数 - - - - - - - - - - - - - - - - //
  95          
  96          #if 0
               /**
                * @brief 外部中断0 - 中断服务函数
                *
                */
              void eint0_interrupt_func(void) interrupt 0
              {
              
              }
              #endif
 106          
 107          
 108          #if 0
              /**
               * @brief 外部中断1 - 中断服务函数
               *
               */
              void eint1_interrupt_func(void) interrupt 1
              {
              
C51 COMPILER V9.59.0.0   MAIN                                                              08/29/2024 16:47:03 PAGE 3   

              }
              #endif
 118          
 119          
 120          #if 0
              /**
               * @brief 外部中断2 - 中断服务函数
               *
               */
              void eint2_interrupt_func(void) interrupt 2
              {
              
              }
              #endif
 130          
 131          
 132          #if 0
              /**
               * @brief 外部中断3 - 中断服务函数
               *
               */
              void eint3_interrupt_func(void) interrupt 3
              {
              
              }
              #endif
 142          
 143          
 144          #if 0
              /**
               * @brief 外部中断4 - 中断服务函数
               *
               */
              void eint4_interrupt_func(void) interrupt 4
              {
              
              }
              #endif
 154          
 155          
 156          #if 0
              /**
               * @brief 外部中断5 - 中断服务函数
               *
               */
              void eint5_interrupt_func(void) interrupt 5
              {
              
              }
              #endif
 166          
 167          
 168          #if 0
              /**
               * @brief 低电压检测 - 中断服务函数
               *
               */
              void lvd_interrupt_func(void) interrupt 7
              {
              
              }
              #endif
C51 COMPILER V9.59.0.0   MAIN                                                              08/29/2024 16:47:03 PAGE 4   

 178          
 179          
 180          #if 0
              /**
               * @brief iic - 中断服务函数
               *
               */
              void iic_interrupt_func(void) interrupt 8
              {
              
              }
              #endif
 190          
 191          
 192          #if 0
              /**
               * @brief 串口 - 中断服务函数
               *
               */
              void uart_interrupt_func(void) interrupt 9
              {
              
              }
              #endif
 202          
 203          
 204          #if 0
              /**
               * @brief 定时器0 - 中断服务函数
               *
               */
              void timer0_interrupt_func(void) interrupt 11
              {
                  T0CR1 &= 0xFB;      // 清除中断标志位
              }
              #endif
 214          
 215          
 216          /*
 217           * @brief 定时器1 中断服务函数已在 "xx_timer.c" 中定义并执行系统tick功能
 218          */
 219          
 220          
 221          #if 0
              /**
               * @brief 定时器2 - 中断服务函数
               *
               */
              void timer2_interrupt_func(void) interrupt 13
              {
              
              }
              #endif
 231          
 232          
 233          #if 0
              /**
               * @brief 定时器5 - 中断服务函数
               *
               */
              void timer5_interrupt_func(void) interrupt 14
              {
C51 COMPILER V9.59.0.0   MAIN                                                              08/29/2024 16:47:03 PAGE 5   

              
              }
              #endif
 243          
 244          
 245          #if 0
              /**
               * @brief adc & spi - 中断服务函数
               *
               */
              void adc_spi_interrupt_func(void) interrupt 15
              {
              
              }
              #endif
 255          
 256          
 257          #if 0
              /**
               * @brief wt时钟 & 看门狗 - 中断服务函数
               *
               */
              void wt_wdt_interrupt_func(void) interrupt 16
              {
              
              }
              #endif
 267          
 268          
 269          #if 0
              /**
               * @brief led & lcd & 运算单元 - 中断服务函数
               *
               */
              void led_com_mdu_interrupt_func(void) interrupt 17
              {
              
              }
              #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    127    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
