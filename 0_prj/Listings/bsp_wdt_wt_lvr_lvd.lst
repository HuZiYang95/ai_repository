C51 COMPILER V9.59.0.0   BSP_WDT_WT_LVR_LVD                                                08/29/2024 16:47:01 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE BSP_WDT_WT_LVR_LVD
OBJECT MODULE PLACED IN .\Objects\bsp_wdt_wt_lvr_lvd.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\1_bsp\bsp_wdt_wt_lvr_lvd.c OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\1_
                    -bsp;..\2_hal;..\3_app;..\4_user) DEBUG PRINT(.\Listings\bsp_wdt_wt_lvr_lvd.lst) OBJECT(.\Objects\bsp_wdt_wt_lvr_lvd.obj)

line level    source

   1          /**
   2           * @file bsp_wdt_wt_lvr_lvd.c
   3           * @author your name (you@domain.com)
   4           * @brief 中微爱芯 & aip8f3264
   5           * @brief RD8F12AE2207A / RD8F04DS1407A / RD8F04DS1007A
   6           * @version 0.1
   7           * @date 2024-01-04
   8           *
   9           * @copyright Copyright (c) 2024
  10           *
  11           */
  12          #include "bsp_wdt_wt_lvr_lvd.h"
  13          #include "bsp_sfr.h"
  14          
  15          
  16           /**
  17            * @brief 看门狗初始化，初始化默认开启
  18            *
  19            * @param wdt_cnt wdt时间设定
  20            *
  21            * @note 看门狗时间 = (1 + wdt_cnt) * 256 / F(LIRC) = (1 + wdt_cnt) * 256 / 15K 单位为秒
  22            */
  23          void bsp_wdt_init(unsigned char wdt_cnt)
  24          {
  25   1          WDTCR = 0x42;       // 看门狗使用独立定时器，时钟源 LIRC/256
  26   1          WDTDR = wdt_cnt;
  27   1          WDT_CLR();
  28   1          WDTCR |= 0x80;      // 看门狗使能
  29   1      }
  30          
  31          
  32          /**
  33           * @brief 看门狗开关
  34           *
  35           * @param Switch
  36           */
  37          void bsp_wdt_switch(TYPE_ENUM_SWITCH Switch)
  38          {
  39   1          if (DISABLE == Switch) WDTCR &= ~0x80;
  40   1          else WDTCR |= 0x80;
  41   1      }
  42          
  43          
  44          /**
  45           * @brief lvr初始化，初始化默认开启
  46           *
  47           * @param LvrVol lvr电压档位选择
  48           */
  49          void bsp_lvr_init(TYPE_ENUM_LVR LvrVol)
  50          {
  51   1          LVRCR = LvrVol;
  52   1          LVRCR |= 0x80;
  53   1      }
  54          
C51 COMPILER V9.59.0.0   BSP_WDT_WT_LVR_LVD                                                08/29/2024 16:47:01 PAGE 2   

  55          
  56          /**
  57           * @brief 低压复位开关
  58           *
  59           * @param Switch
  60           */
  61          void bsp_lvr_switch(TYPE_ENUM_SWITCH Switch)
  62          {
  63   1          if (Switch == DISABLE) LVRCR &= ~0x80;
  64   1          else LVRCR |= 0x80;
  65   1      }
  66          
  67          
  68          /**
  69           * @brief lvd初始化
  70           *
  71           * @param Switch
  72           * @param LvdVol lvd电压档位选择
  73           */
  74          void bsp_lvd_init(TYPE_ENUM_SWITCH Switch, TYPE_ENUM_LVD LvdVol)
  75          {
  76   1          LVICR = LvdVol;
  77   1          if (Switch == ENABLE) LVICR |= U8_BIT7;
  78   1      }
  79          
  80          
  81          /**
  82           * @brief 读取lvd状态标志位
  83           *
  84           * @return TYPE_ENUM_FLAG 触发状态
  85           */
  86          TYPE_ENUM_FLAG bsp_lvd_status()
  87          {
  88   1          if (LVICR & U8_BIT4)
  89   1          {
  90   2              LVICR &= U8_NBIT4;
  91   2              return TRIGGER;
  92   2          }
  93   1          else return STABLE;
  94   1      }
  95          
  96          
  97          /**
  98           * @brief WT定时器及32.768KHz晶振使能
  99           *
 100           * @param Gpio 晶振所接端口选择
 101           */
 102          TYPE_ENUM_STATUS bsp_wt_init_32768(TYPE_ENUM_LXT_GPIO Gpio)
 103          {
 104   1          unsigned int i = 0;
 105   1      
 106   1          if (LXT_P50_P51 == Gpio)
 107   1          {
 108   2              OSCCR1 |= 0x80;
 109   2          }
 110   1          else if (LXT_P53_P54 == Gpio)
 111   1          {
 112   2              OSCCR1 &= ~0x80;     // P53/P54 接32.768
 113   2          }
 114   1          OSCTS = 0;
 115   1          OSCCR |= 0x80;
 116   1          while (!(OSCCR1 & 0x02))
C51 COMPILER V9.59.0.0   BSP_WDT_WT_LVR_LVD                                                08/29/2024 16:47:01 PAGE 3   

 117   1          {
 118   2              if (++i >= 30000)
 119   2              {
 120   3                  OSCCR &= ~0x80;
 121   3                  return ERROR;
 122   3              }
 123   2          }
 124   1          WTCR = 0x08;
 125   1          WTCR |= 0x80;
 126   1          return SUCCESS;
 127   1      }
 128          
 129          
 130          /**
 131           * @brief 读取wt定时器状态
 132           *
 133           * @return unsigned char 每0.5s时刻返回值为"1"，其余时刻为"0"
 134           */
 135          unsigned char bsp_wt_clock(void)
 136          {
 137   1          if (0 == (WTCR & 0x10)) return 0;
 138   1          WTCR &= ~0x10;
 139   1          return 1;
 140   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    141    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
