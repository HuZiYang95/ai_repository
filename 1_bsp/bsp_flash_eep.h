/**
 * @file bsp_flash_eep.h
 * @author your name (you@domain.com)
 * @brief 中微爱芯 & aip8f3264
 * @brief RD8F12AE2207A / RD8F04DS1407A / RD8F04DS1007A
 * @version 0.1
 * @date 2024-01-04
 *
 * @copyright Copyright (c) 2024
 *
 */
#ifndef _BSP_FLASH_EEP_H_
#define _BSP_FLASH_EEP_H_

#include "typedef.h"

typedef enum
{
    FLASH_UNPROTECT = 0,
    FLASH_PROTECT_07FF,
    FLASH_PROTECT_0BFF,
    FLASH_PROTECT_0FFF,
    FLASH_PROTECT_13FF,
    FLASH_PROTECT_17FF,
    FLASH_PROTECT_1BFF,
    FLASH_PROTECT_1FFF,
    FLASH_PROTECT_27FF,
    FLASH_PROTECT_23FF,
    FLASH_PROTECT_2BFF,
    FLASH_PROTECT_2FFF,
    FLASH_PROTECT_33FF,
    FLASH_PROTECT_37FF,
    FLASH_PROTECT_3BFF,
    FLASH_PROTECT_3FFF,
    FLASH_PROTECT_43FF,
    FLASH_PROTECT_47FF,
    FLASH_PROTECT_4BFF,
    FLASH_PROTECT_4FFF,
    FLASH_PROTECT_53FF,
    FLASH_PROTECT_57FF,
    FLASH_PROTECT_5BFF,
    FLASH_PROTECT_5FFF,
    FLASH_PROTECT_63FF,
    FLASH_PROTECT_67FF,
    FLASH_PROTECT_6BFF,
    FLASH_PROTECT_6FFF,
    FLASH_PROTECT_73FF,
    FLASH_PROTECT_77FF,
    FLASH_PROTECT_7BFF,
    FLASH_PROTECT_7FFF,
    FLASH_PROTECT_83FF,
    FLASH_PROTECT_87FF,
    FLASH_PROTECT_8BFF,
    FLASH_PROTECT_8FFF,
    FLASH_PROTECT_93FF,
    FLASH_PROTECT_97FF,
    FLASH_PROTECT_9BFF,
    FLASH_PROTECT_9FFF,
    FLASH_PROTECT_A3FF,
    FLASH_PROTECT_A7FF,
    FLASH_PROTECT_ABFF,
    FLASH_PROTECT_AFFF,
    FLASH_PROTECT_B3FF,
    FLASH_PROTECT_B7FF,
    FLASH_PROTECT_BBFF,
    FLASH_PROTECT_BFFF,
    FLASH_PROTECT_C3FF,
    FLASH_PROTECT_C7FF,
    FLASH_PROTECT_CBFF,
    FLASH_PROTECT_CFFF,
    FLASH_PROTECT_D3FF,
    FLASH_PROTECT_D7FF,
    FLASH_PROTECT_DBFF,
    FLASH_PROTECT_DFFF,
    FLASH_PROTECT_E3FF,
    FLASH_PROTECT_E7FF,
    FLASH_PROTECT_EBFF,
    FLASH_PROTECT_EFFF,
    FLASH_PROTECT_F3FF,
    FLASH_PROTECT_F7FF,
    FLASH_PROTECT_FBFF,
    FLASH_PROTECT_FFFF
}TYPE_ENUM_FLASH_PROTECE;

typedef enum
{
    FLASH_ERASE_0000_03FF = 0,
    FLASH_ERASE_0400_07FF,
    FLASH_ERASE_0800_0BFF,
    FLASH_ERASE_0C00_0FFF,
    FLASH_ERASE_1000_13FF,
    FLASH_ERASE_1400_17FF,
    FLASH_ERASE_1800_1BFF,
    FLASH_ERASE_1C00_1FFF,
    FLASH_ERASE_2000_23FF,
    FLASH_ERASE_2400_27FF,
    FLASH_ERASE_2800_2BFF,
    FLASH_ERASE_2C00_2FFF,
    FLASH_ERASE_3000_33FF,
    FLASH_ERASE_3400_37FF,
    FLASH_ERASE_3800_3BFF,
    FLASH_ERASE_3C00_3FFF,
    FLASH_ERASE_4000_43FF,
    FLASH_ERASE_4400_47FF,
    FLASH_ERASE_4800_4BFF,
    FLASH_ERASE_4C00_4FFF,
    FLASH_ERASE_5000_53FF,
    FLASH_ERASE_5400_57FF,
    FLASH_ERASE_5800_5BFF,
    FLASH_ERASE_5C00_5FFF,
    FLASH_ERASE_6000_63FF,
    FLASH_ERASE_6400_67FF,
    FLASH_ERASE_6800_6BFF,
    FLASH_ERASE_6C00_6FFF,
    FLASH_ERASE_7000_73FF,
    FLASH_ERASE_7400_77FF,
    FLASH_ERASE_7800_7BFF,
    FLASH_ERASE_7C00_7FFF,
    FLASH_ERASE_8000_83FF,
    FLASH_ERASE_8400_87FF,
    FLASH_ERASE_8800_8BFF,
    FLASH_ERASE_8C00_8FFF,
    FLASH_ERASE_9000_93FF,
    FLASH_ERASE_9400_97FF,
    FLASH_ERASE_9800_9BFF,
    FLASH_ERASE_9C00_9FFF,
    FLASH_ERASE_A000_A3FF,
    FLASH_ERASE_A400_A7FF,
    FLASH_ERASE_A800_ABFF,
    FLASH_ERASE_AC00_AFFF,
    FLASH_ERASE_B000_B3FF,
    FLASH_ERASE_B400_B7FF,
    FLASH_ERASE_B800_BBFF,
    FLASH_ERASE_BC00_BFFF,
    FLASH_ERASE_C000_C3FF,
    FLASH_ERASE_C400_C7FF,
    FLASH_ERASE_C800_CBFF,
    FLASH_ERASE_CC00_CFFF,
    FLASH_ERASE_D000_D3FF,
    FLASH_ERASE_D400_D7FF,
    FLASH_ERASE_D800_DBFF,
    FLASH_ERASE_DC00_DFFF,
    FLASH_ERASE_E000_E3FF,
    FLASH_ERASE_E400_E7FF,
    FLASH_ERASE_E800_EBFF,
    FLASH_ERASE_EC00_EFFF,
    FLASH_ERASE_F000_F3FF,
    FLASH_ERASE_F400_F7FF,
    FLASH_ERASE_F800_FBFF,
    FLASH_ERASE_FC00_FFFF
}TYPE_ENUM_FLASH_ERASE;


extern void bsp_flash_protect(TYPE_ENUM_FLASH_PROTECE ProteceFlashAddr);
extern void bsp_flash_erase_page(TYPE_ENUM_FLASH_ERASE EraseFlashAddr);
extern void bsp_flash_write_byte(unsigned int addr, unsigned char dat);
extern unsigned char bsp_flash_read_byte(unsigned int addr);
extern void bsp_eep_erase_page(void);
extern void bsp_eep_write_byte(unsigned int addr, unsigned char dat);
extern unsigned char bsp_eep_read_byte(unsigned int addr);

#endif
